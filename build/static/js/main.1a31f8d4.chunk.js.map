{"version":3,"sources":["store/Store.js","users/setting.js","users/Index.jsx","Login.jsx","users/New.jsx","users/Edit.jsx","users/History.jsx","users/Show.jsx","users/EmpShow.jsx","items/Index.jsx","items/New.jsx","items/Edit.jsx","items/Process.jsx","items/setItemData.js","orders/Index.jsx","orders/New.jsx","orders/setItem.js","orders/Edit.jsx","images/fishs2.jpg","customer/Index.jsx","customer/Show.jsx","customer/NoData.jsx","customer/confirm.jsx","shopping/settiing.js","shopping/Index.jsx","shopping/Show.jsx","shopping/Reservation.jsx","App.js","reportWebVitals.js","index.js"],"names":["init_data","userData","buyCarts","historyData","loginReducer","state","action","newData","slice","splice","push","user","logoutReducer","cartReducer","data","cartResetReducer","cartUpdateReducer","items","forEach","item","cartDeleteReducer","datas","num","userHistoryReducer","history","sendLoginData","type","cartDeleteCart","index","historyDataSend","createStore","ordercheck","count","date","status","shopping_date","orderHistoryStatus","className","daySetting","newDate","Date","getFullYear","getMonth","getDate","todayParams","today","year","month","day","customerTodayOrders","allData","todayOrder","createDate","c_year","c_month","c_day","customerOrders","Orders","customers","users","customerUsers","admin","userLink","border","background","color","outline","fontWeight","textDecoration","withRouter","connect","props","useState","localStorage","getItem","JSON","parse","setState","a","axios","get","then","res","setItem","stringify","catch","error","console","log","userCall","length","data-testid","Row","Col","md","span","offset","Table","striped","bordered","hover","map","value","style","onClick","i","id","dispatch","name","email","Button","variant","editIdget","window","confirm","delete","response","alert","message","deleteUser","password","inputText","e","target","Form","onSubmit","preventDefault","post","confirmation","err","Group","Label","Control","placeholder","onChange","required","display","show","setShow","userInput","class","getuserData","patch","orders","process","price","loginUserCheck","useEffect","create","rowSpan","colSpan","Number","itemLink","image","width","height","imageShow","localData","modalData","itemData","removeItem","itemsCall","Image","src","alt","roundedCircle","openModal","category","itemEditIdget","editPage","processIdget","processItem","deleteItem","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","rounded","processes","info","file","setImage","itemInput","params","FormData","append","headers","File","label","multiple","accept","files","as","cols","rows","setProcess","options","selectedOption","setSelectedOption","obj","isMulti","defaultValue","processing_name","deleteProcess","orderCall","stock","orderEditIdget","deleteOrder","formSelectItems","dochange","sendData","defaultvalue","getitemData","rightAreaTable","overflow","nameTitle","padding","maxWidth","margin","buycheck","fontSize","textAlign","borderLeft","buttonHeight","fixItemData","sendCustomerData","buyItem","icon","faCartPlus","total","itemTotalMoney","sendCartItemToConfirm","faCashRegister","table","number","propData","minusNumber","changeItemData","array","stockOption","split","NoData","title","fontFamily","marginTop","marginRight","th","orderData","cartNum","setNumber","faShoppingCart","faFish","faYenSign","faCalculator","faUtensils","size","custom","currentNumber","changeNumber","calcNumber","cartItemName","stateData","dataNumber","buycart","thiscartData","delAction","numArray","doSelect","order","selectNumber","viewDataBranch","todayOdrersChecker","shoppings","shopping","todayOrderExisting","todayObjects","setDate","t_date","t_year","t_month","t_day","customButton","borderBottom","shopingData","shoppingsCall","orderStatus","onMouseOver","document","getElementById","hoverButton","onMouseOut","outButton","sendShoppingData","showShoppingStatus","user_name","font","sendStatusNumber","statusLayout","faTruck","faClipboard","editId","deleteId","itemEditId","processId","OrderEditId","customerItem","shoppingShow","cartItem","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","faUser","to","cartAction","exact","path","render","getEditId","component","userNew","UserShow","OrderEdit","getItemEditId","getProcessId","ItemNew","getOrderEditId","OrderNew","changeItem","shoppingData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","datastore"],"mappings":"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","file":"static/js/main.1a31f8d4.chunk.js","sourcesContent":["import { createStore } from \"redux\";\nimport { data } from \"jquery\";\n\nlet init_data ={\n  userData: [],\n  buyCarts: [],\n  historyData: null\n}\n\nconst storeReducer = (state = init_data, action)=>{\n  switch (action.type) {\n    case 'LOGIN':\n      return loginReducer(state, action);\n    case 'LOGOUT':\n      return logoutReducer(state, action);\n    case 'CARTADD':\n      return cartReducer(state, action);\n    case 'CARTRESET':\n      return cartResetReducer(state, action);\n    case 'CARTDELETE':\n      return cartDeleteReducer(state, action);\n    case 'CARTUPDATE':\n      return cartUpdateReducer(state, action);\n    case 'USERHISTORY':\n      return userHistoryReducer(state, action);  \n    default:\n      return state\n  }\n}\n/**************[-----redux処理---------]*********************************************************************** */\nconst loginReducer = (state, action)=>{\n  let newData = state.userData.slice();\n  newData.splice(0);\n  newData.push(action.user);\n \n  return{\n    userData: newData,\n    buyCarts: state.buyCarts,\n    historyData: state.historyData\n  }\n}\nconst logoutReducer =(state, action)=>{\n    let newData = state.userData.slice();\n    newData.splice(0);\n    return{\n      userData: newData,\n      buyCarts: state.buyCarts,historyData: state.historyData\n    }\n  }\nconst cartReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.push(action.data);\n  \n  return{\n    userData: state.userData,\n    buyCarts: data,\n    historyData: state.historyData\n  }\n}\nconst cartResetReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  return{\n    userData: state.userData,\n    buyCarts: data,\n    historyData: state.historyData\n  }\n}\nconst cartUpdateReducer = (state, action)=>{\n  let data = state.buyCarts.slice();\n  data.splice(0);\n  action.items.forEach((item) => {\n    data.push(item);\n  });\n  return{\n    userData: state.userData,\n    buyCarts: data,\n    historyData: state.historyData\n  }\n}\nconst cartDeleteReducer = (state, action)=>{\n  let datas = state.buyCarts.slice();\n  datas.splice(action.num, 1);\n  return{\n    userData: state.userData,\n    buyCarts: datas,\n    historyData: state.historyData\n  }\n}\n\nconst userHistoryReducer = (state, action)=>{\n  let history = action.data;\n  return{\n    userData: state.userData,\n    buyCarts: state.buyCarts,\n    historyData: history\n  }\n}\n/**************[-----コンポーネント送受メソッド処理---------]*********************************************************************** */\nexport  const sendLoginData = (user)=>{\n  return{\n    type:'LOGIN',\n    user: user\n  };\n}\nexport const logoutAction =()=>{\n  return{\n    type: 'LOGOUT'\n  }\n}\nexport const cartsAdd = (item)=>{\n  return{\n    type: 'CARTADD',\n    data: item\n  }\n}\nexport const cartEmpty = ()=>{\n  return{\n    type: 'CARTRESET'\n  }\n}\nexport const cartDeleteCart = (index)=>{\n  return{\n    type: 'CARTDELETE',\n    num: index\n  }\n}\nexport const cartUpdate = (items)=>{\n  return{\n    type: 'CARTUPDATE',\n    items: items\n  }\n}\nexport const historyDataSend = (data)=>{\n  return{\n    type: 'USERHISTORY',\n    data: data\n  }\n}\nexport default createStore(storeReducer)","import React from 'react';\n\n/*注文された商品中受け渡し済み以外申請中と加工済みの件数検知*/\n\nexport const ordercheck = (datas) =>{\n   let count = 0;\n   let date = null;\n  if(datas){\n    datas.forEach(data => {\n        if(data.status === 0 || data.status === 1){\n            count += 1;\n            date = data.shopping_date;\n        }\n    });\n    return {\n        count:  count + '件注文',\n        date: date\n    }\n  }\n  else{\n    return '履歴なし';\n  }\n}\n/* 注文された商品の履歴状況分岐  */\n\nexport const orderHistoryStatus = (status) =>{\n  switch (status) {\n    case 0:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 1:\n      return <div className=\"bg-info text-white\">注文中</div>\n    case 2:\n      return <div className=\"font-weight-bold\">完了済み</div>\n    default:\n      break;\n  }\n}\n/****************************************************************************************************** */\n/*日付の表示設定*/\nexport const daySetting = (date)=>{\n  let newDate = new Date(date);\n  let year = newDate.getFullYear();\n  let month = newDate.getMonth() + 1;\n  let day = newDate.getDate();\n  return year + '年' + month + '月' +day +'日';\n}\n/***************************************************************************************************** */\n/*共通パラメーター*/\nconst todayParams =()=>{\n  /*本日*/\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n  return{\n    year: year,\n    month: month,\n    day: day\n  }\n}\n/*当日日付のみのデータ抽出 */\n\nexport const customerTodayOrders = (allData)=>{\n  let todayOrder = [];\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if( todayParams().year === c_year && todayParams().month === c_month && todayParams().day === c_day){\n        todayOrder.push(data);\n      }\n    })\n  }\n  return todayOrder;\n}\n\n  /*当日以外の日付のみのデータ抽出 */\n\nexport const customerOrders = (allData)=>{\n  let Orders = [];\n\n  /*全データから抽出*/\n  if(allData){\n    allData.forEach((data)=>{\n      /*注文データ*/\n      const createDate = new Date(data.shopping_date);\n      const c_year = createDate.getFullYear();\n      const c_month = createDate.getMonth() + 1;\n      const c_day = createDate.getDate();\n      if(todayParams().year >= c_year && todayParams().month >= c_month && todayParams().day > c_day){\n        Orders.push(data);\n      }\n    })\n  }\n  return Orders;\n}\n/*お客様一覧でユーザーのうち従業員を省いた一覧*/\n\nexport const customers =(users)=>{\n  let customerUsers = [];\n  users.forEach((user)=>{\n    if(!(user.admin === true)){\n      customerUsers.push(user);\n    }\n  });\n  return customerUsers;\n}\n\n","import {  useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport './users.css';\nimport { connect } from 'react-redux';\nimport {historyDataSend} from '../store/Store';\nimport { customers } from './setting';\n\n\nconst userLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('users') ? JSON.parse(localStorage.getItem('users')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   async function userCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/users')\n       .then((res)=>{\n          localStorage.setItem('users', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('users'))\n      })\n  }\n    useState(userCall());\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.editIdget(id);\n     props.history.push(\"/users/edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteUser(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/users/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n   const userShowaccess = (id)=>{\n    axios\n    .get(`https://uematsu-backend.herokuapp.com/history/show/${id}`)\n    .then((res)=>{\n       const action = historyDataSend(res.data);\n       props.dispatch(action);\n\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n     props.history.push('/users_empshow');\n   }\n \n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">会員一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">名前</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">メールアドレス</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {customers(state.data).map((value)=>(\n                  <tr key={value.name}>\n                     <td className=\"text-center align-middle\">\n                       <button \n                         style={userLink} \n                         onClick={(i)=>userShowaccess(value.id)}\n                       >{value.name}</button>\n                    </td>\n                    <td  className=\"text-center align-middle\">\n                      {value.email}\n                    </td>\n                    <td>\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteUser(value.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button,Modal } from 'react-bootstrap';\nimport './App.css'\nimport { withRouter } from 'react-router'\nimport axios from 'axios'\nimport { connect} from 'react-redux';\nimport { sendLoginData } from './store/Store';\n\nconst  Login = (props)=>{\n\n  const[state, setState] = useState({\n    email: '',\n    password: ''\n  })\n\n  const newUserComponent = ()=>{\n    props.history.push('/users/new');  \n  }\n  const accesslogin = (e)=>{\n    e.preventDefault();\n    let data = {\n      email: state.email,\n      password: state.password,\n    }\n    axios.post('https://uematsu-backend.herokuapp.com/sessions', data)\n      .then(function (response) {\n\n        if(response.data.name){\n            let action = sendLoginData(response.data);\n            props.dispatch(action);\n            /*railsからメッセージ*/\n            alert('ログインしました'); \n            setState({\n              name: '',\n              email: '',\n              password: '',\n              confirmation: ''\n            })\n            response.data.admin == true? props.history.push('/') :  props.history.push('/users/show');\n          }\n          else{\n            alert('ログイン失敗');\n          }\n      })\n      .catch(function(err){\n        alert(err);\n      })\n  }\n  const inputText = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]:value});\n  }\n  return(\n   <>\n    <div className=\"text-center mt-5 mb-4\">\n        <h2 className=\"text-secondary\" data-testid=\"logintitle\">ログイン</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n          <Form onSubmit={accesslogin} data-testid=\"loginForm\">\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control \n                type=\"email\" \n                name=\"email\"\n                placeholder=\"(例)sample@example.com\" \n                className=\"h8\" \n                onChange={inputText}\n                required\n                value={state.email}\n                data-testid=\"ml\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label>\n              <Form.Control\n                 type=\"password\" \n                 name=\"password\"\n                 placeholder=\"(例)password\" \n                 onChange={inputText}\n                 required\n                 value={state.password}\n                 data-testid=\"ps\"\n              />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              <Button \n                variant=\"primary\" \n                onClick={newUserComponent}\n                className=\"btn-block mt-3\">\n                新規登録\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Login))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmation: ''\n  })\n  \n\n  const loginComponent = ()=>{\n    props.history.push('/login')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.post('https://uematsu-backend.herokuapp.com/users', data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規会員登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={loginComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(New)","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport './users.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  Edit = (props)=>{\n\n const getuserData = ()=>{\n  let user = []\n  let datas = JSON.parse(localStorage.getItem('users'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     user.push(data);\n    }\n  });\n  return user\n }\n  let user = getuserData();\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n\n  const[state, setState] = useState({\n    name: user.length>0? user[0].name : '',\n    email: user.length>0?  user[0].email : '',\n    password: '',\n    confirmation: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n\n  const homeComponent = ()=>{\n    props.history.push('/')  \n  }\n  const userInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n  const sendUserParameter = (e)=>{\n    e.preventDefault();\n    if(state.password === state.confirmation){\n      let data = {\n        name: state.name,\n        email: state.email,\n        password: state.password,\n        confirmation: state.confirmation\n      }\n      setShow({display: 'none'});\n      axios.patch(`https://uematsu-backend.herokuapp.com/users/${props.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          email: '',\n          password: '',\n          confirmation: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n    }\n    /*password不一致警告解除*/\n    else{\n      setShow({display: 'block'});\n    }\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2>{state.name}情報編集</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={homeComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendUserParameter}>\n            <Form.Group>\n              <Form.Label>お名前</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={userInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>メールアドレス</Form.Label>\n              <Form.Control type=\"email\" name=\"email\" placeholder=\"*必須です。\" required onChange={userInput} value={state.email} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード</Form.Label><br/>\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"password\" placeholder=\"*必須です。\" required onChange={userInput} value={state.password} />\n             \n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>パスワード確認</Form.Label><br />\n              <div class=\"balloon1\" style={show}>\n                <p>パスワードが一致してません。</p>\n              </div>\n              <Form.Control type=\"password\" name=\"confirmation\" placeholder=\"*もう一度入力ください。\" required onChange={userInput}\n                value={state.confirmation}\n               />\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n\n              \n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Edit));\n/***************************************************************************************************** */","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { orderHistoryStatus } from \"./setting\";\n\nconst  History = (props)=>{\n\n  return(\n   <>\n    {props.userData[0].orders[0]? \n      <>\n       <Table bordered className=\"mt-3\">\n         <thead>\n           <tr>\n             <th className=\"bg-primary text-white text-center\">注文日</th>\n             <th className=\"bg-primary text-white text-center\">注文商品</th>\n             <th className=\"bg-primary text-white text-center\">加工法</th>\n             <th className=\"bg-primary text-white text-center\">価格</th>\n             <th className=\"bg-primary text-white text-center\">注文数</th>\n             <th className=\"bg-primary text-white text-center\">状況</th>\n           </tr>\n         </thead>\n         <tbody>\n           {props.userData[0].orders[0].map((data)=>(\n             <tr>\n               <td className=\"font-weight-bold text-center\">{data.shopping_date}</td>\n               <td className=\"font-weight-bold text-center\">{data.name}</td>\n               <td className=\"font-weight-bold text-center\">{data.process}</td>\n               <td className=\"font-weight-bold text-center\">{data.price}</td>\n               <td className=\"font-weight-bold text-center\">{data.num}</td>\n               <td className=\"font-weight-bold text-center\">{orderHistoryStatus(data.status)}</td>\n             </tr>\n           ))}\n         </tbody>\n       </Table>\n      </>\n      : \n      <div className=\"p-5 bg-secondary mt-3 text-white font-weight-bold\">履歴がありません。</div>\n    }\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(History))","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { historyDataSend } from '../store/Store';\nimport { ordercheck, daySetting } from './setting';\nimport History from './History';\n\n\n/**************************************************************************************** */\nconst  Show = (props)=>{\n   \n  /*************APIによるuser一覧**********************************/\n   async function orderCall(){\n     \n    await axios\n      .get(`https://uematsu-backend.herokuapp.com/history/show/${props.userData[0].id}`)\n      .then((res)=>{\n         const action = historyDataSend(res.data);\n         props.dispatch(action);\n\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n }\n \n\n\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n      loginUserCheck();\n    })\n  return(\n   <>\n      {props.userData.length >0?\n       <>\n        <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n          <h2 className=\"text-white font-weight-bold\">{props.userData[0].name}さんページ</h2>\n        </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          <Row>\n            <Col md={{span :7}}>\n              <p className=\"font-weight-bold\">会員情報</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">名前</th>\n                   <td>{props.userData[0].name}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">メールアドレス</th>\n                   <td>{props.userData[0].email}</td>\n                 </tr>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用開始日</th>\n                   <td>{daySetting(props.userData[0].create)}</td>\n                 </tr>\n                </tbody>\n              </Table>\n            </Col>\n            <Col md={{span :5}}>\n            <p className=\"font-weight-bold\">ご利用状況</p>\n              <Table  bordered className=\"mt-3\">\n                <tbody>\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">ご利用回数</th>\n                   <td className=\"text-center\">{props.userData[0].orders[0]? props.userData[0].orders[0].length : 0 }</td>\n                 </tr>\n               \n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">現在注文有無</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).count? ordercheck(props.userData[0].orders[0]).count : '未使用'}</td>\n                 </tr>\n\n                 <tr>\n                   <th className=\"bg-primary text-white w-50\">注文日</th>\n                   <td className=\"text-center\">{ordercheck(props.userData[0].orders[0]).date? ordercheck(props.userData[0].orders[0]).date : '未使用'}</td>\n                 </tr>\n               \n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Col>    \n      </Row>\n      </>\n        : \n        loginUserCheck()\n      }\n      {/* 履歴エリア */}\n\n      <div className=\"text-center mt-3 font-weight-bold\">\n          <h2 className=\"text-light font-weight-bold\">商品依頼履歴</h2>\n      </div>\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 mt-2 pb-4 bg-light shadow\">\n          {/* ログアウト中は無効 */}\n          \n          {props.userData.length >0? <History /> : ''}\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { daySetting, customerTodayOrders,customerOrders } from './setting';\n\n\n\n/**************************************************************************************** */\nconst  EmpShow = (props)=>{\n   \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\" className=\"text-light font-weight-bold\">{props.historyData? props.historyData.name : ''}&nbsp;注文履歴</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【現在注文中の表品一覧】</p>\n         {(props.historyData && customerTodayOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerTodayOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n      {/* 当日以外の履歴 */}\n\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <p className=\"font-weight-bold text-center\">【過去の注文一覧】</p>\n         {(props.historyData && customerOrders(props.historyData.orders[0]).length >0)? \n           <>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">日付</th>\n                  <th rowSpan=\"2\" className=\"text-white text-center bg-primary align-middle\">商品名</th>\n                  <th colSpan=\"3\" className=\"text-white text-center bg-primary\">価格</th>\n                  <th rowSpan=\"3\" className=\"text-white text-center bg-primary align-middle\">依頼加工</th>\n                </tr>\n                <tr>\n                  <th className=\"text-white text-center bg-primary\">単価</th>\n                  <th className=\"text-white text-center bg-primary\">数量</th>\n                  <th className=\"text-white text-center bg-primary\">合計</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerOrders(props.historyData.orders[0]).map((data)=>(\n                  <tr>\n                    <td className=\"text-center font-weight-bold\">{daySetting(data.shopping_date)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.name}</td>\n                    <td className=\"text-center font-weight-bold\">{data.price}</td>\n                    <td className=\"text-center font-weight-bold\">{data.num}</td>\n                    <td className=\"text-center font-weight-bold\">{Number(data.num) * Number(data.price)}</td>\n                    <td className=\"text-center font-weight-bold\">{data.process}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n           </>\n            : \n            <div className=\"bg-secondary text-center font-weight-bold text-white p-3\">データがありません。</div>\n          }\n        </Col>    \n      </Row>\n\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(EmpShow))\n","import { useEffect, useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutAction } from '../store/Store';\n\n\nconst itemLink ={\n  border: 'none',\n  background: 'none',\n  color: '#333399',\n  outline: 'none',\n  fontWeight: 'bold',\n  textDecoration: 'underline',\n  \n}\nconst image={\n  width: '80px',\n  height: '80px'\n}\nconst imageShow={\n  width: '150px',\n  height: '150px'\n}\n\n\n function Index(props){\n  let localData = JSON.parse(localStorage.getItem('items'))\n  let modalData = [];\n\n\n  /************************ステート*************************************** */\n  const[itemData, setState] = useState(\n    localData ? localData : []\n  )\n  /*--モーダル--*/\n  const [show, setShow] = useState({\n    status: false,\n    data: []\n  });\n\n  const handleClose = () => setShow({status: false, data: show.data});\n  \n  /*************APIによるitem一覧**********************************/\n  async function itemsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/items')\n      .then((res)=>{\n         localStorage.removeItem('items');\n         setState(res.data);\n         localStorage.setItem('items', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(itemsCall());\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0 && props.itemData === null){\n        props.history.push('/login');  \n      }\n    }\n\n  useState(loginUserCheck());\n  \n   const newPage = ()=>{\n    props.history.push('/items_new')\n   }\n   /****************************編集**************************************** */\n   const editPage = (item)=>{\n    props.itemEditIdget(item);\n    props.history.push(\"/items_edit\");\n  } \n  /*****************************削除********************************************* */\n  const deleteItem = (i)=>{\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/items/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n  }\n  /*****************************加工ページ********************************************* */\n  const processItem = (item)=>{\n    props.processIdget(item);\n    props.history.push('/items_process');\n  }\n  /*****************************モーダル開く********************************************** */\n  const openModal = (item)=>{\n    modalData.splice(0);\n    modalData.push(item);\n  \n    setShow({\n      status: true,\n      data: modalData\n    })\n  }\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\">商品一覧</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Button \n            variant=\"primary\"\n            onClick={newPage}\n          >新規商品登録</Button>\n         \n          {itemData.length > 0 ?\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">画像</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">カテゴリー</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {itemData.map((item,i)=>(\n                  <tr>\n                    <td>\n                      <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" style={image} roundedCircle />\n                    </td>\n                    <td className=\"align-middle\">\n                      <button \n                         style={itemLink} \n                         onClick={(i)=>openModal(item)}\n                       >{item.name}</button>\n                    </td>\n                    <td className=\"text-right text-danger align-middle font-weight-bold\">{item.price}</td>\n                    <td className=\"align-middle\">{item.category}</td>\n                    <td className=\"align-middle\">\n                    <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(item)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                     <Button \n                        variant=\"primary\"\n                        onClick={(i)=>processItem(item)}\n                        className=\"ml-3\"\n                      >加工法管理</Button>\n                    \n                    <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteItem(item.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n               \n            </Table>\n            :\n            <div className=\"text-center bg-info text-white font-weight-bold p-5 mt-3\">\n              データを表示できません。\n            </div>\n            }\n        </Col>\n      </Row>\n      <Modal\n         show={show.status}\n         onHide={handleClose}\n         backdrop=\"static\"\n         keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"font-weight-bold\">\n             {show.data.length ===0? '' : `${show.data[0].name}詳細`}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Table bordered>\n           <tbody>  \n             <tr>\n               <td colSpan=\"2\" className=\"text-center\">\n                <Image \n                  src={show.data.length ===0? '' : `http://yukiabineko.sakura.ne.jp/react/${show.data[0].name}.jpg`} \n                  alt=\"表示できません\" \n                  style={imageShow} \n                  rounded \n                />\n               </td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">商品名</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].name}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">価格</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].price}</td>\n             </tr>\n             <tr>\n               <th className=\"bg-primary text-white\">カテゴリー</th>\n               <td className=\"text-center font-weight-bold\">{show.data.length ===0? '' : show.data[0].category}</td>\n             </tr>\n             {show.data.length ===0? \n               '' \n                : \n               <tr>\n                 <th className=\"bg-primary text-white align-middle\">可能調理法</th>\n                 <td>\n                   {show.data[0].processes.map((process)=>(\n                     <td>{process}</td>\n                   ))}\n                 </td>\n               </tr>\n             }\n             <tr>\n               <th colSpan=\"2\" className=\"text-center bg-primary text-white\">商品説明</th>\n             </tr>\n             <tr>\n               <td colSpan=\"2\">{show.data.length ===0? '' : show.data[0].info}</td>\n             </tr>\n           </tbody>\n          </Table>\n        </Modal.Body>\n      </Modal>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nconst  New = (props)=>{\n\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[image, setImage] = useState({\n    file: null\n  })\n\n  const[state, setState] = useState({\n    name: '',\n    price: '',\n    category: '',\n    info: ''\n  })\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const indexComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const itemInput = (e)=>{\n   const target = e.target;\n   const name = target.name;\n   const value = target.value;\n   setState({...state, [name]: value})\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n      /* PHPへの送信 */\n      const params = new FormData();\n      params.append('file', image.file);\n      params.append('name', state.name);\n      axios.post('https://yukiabineko.sakura.ne.jp/send-react.php',\n      　　　　　　　params,\n                  {\n                    headers:{\n                      'content-type': 'multipart/form-data',\n                    },\n                  }\n      ).then((res)=>{\n          console.log(res.data);\n      }).catch(()=>{\n      })\n\n\n      /* rails側への送信*/\n      \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.post('https://uematsu-backend.herokuapp.com/items', data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n      })\n      .catch(function(){\n        alert('error');\n      })\n      setShow({display: 'none'});\n    }\n    setImage({\n      file: null\n    })\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">新規商品登録</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          onClick={indexComponent}\n          className=\"mb-3\"\n        >\n         戻る\n        </Button>\n          <Form onSubmit={sendItemParameter}>\n            <Form.Group>\n              <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>カテゴリー</Form.Label>\n              <div class=\"balloon1\" style={show}>\n                <p>選択してください。</p>\n              </div>\n                <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                  <option value=\"\">選択してください  </option>\n                 {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                   <option key={i} value={value}>{value}</option>\n                 )}\n                </Form.Control>\n            </Form.Group>\n               \n            <Form.Group>\n              <Form.Label>商品説明</Form.Label>\n              <textarea \n                name=\"info\" \n                cols=\"30\" \n                rows=\"10\" \n                value={state.info}\n                onChange={itemInput}\n                className=\"form-control\">{state.info}</textarea>\n            </Form.Group>\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  ItemEdit = (props)=>{\n\n \n   let item = props.item;\n/*********************************state******************************************************* */\n  const[show,setShow] =useState({\n    display: 'none'\n  })\n  const[state, setState] = useState({\n    name: item.name,\n    price: item.price,\n    category: item.category,\n    info: item.info\n  })\n\n  const[image, setImage] = useState({\n    file: null\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\n\nuseState(loginUserCheck());\n\n\n  const homeComponent = ()=>{\n    props.history.push('/items')  \n  }\n  const itemInput = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value;\n    setState({...state, [name]: value});\n  }\n\n  const updateFile = (e)=>{\n    setImage({\n      file: e.target.files[0]\n    })\n  }\n  const sendItemParameter = (e)=>{\n    e.preventDefault();\n    if(state.category === ''){\n      setShow({display: 'block'});\n    }\n    else{\n       /* PHPへの送信 */\n       const params = new FormData();\n       params.append('file', image.file);\n       params.append('name', state.name);\n       axios.post('http://yukiabineko.sakura.ne.jp/send-react.php',\n       　　　　　　　params,\n                   {\n                     headers:{\n                       'content-type': 'multipart/form-data',\n                     },\n                   }\n       ).then((res)=>{\n           console.log(res.data);\n       }).catch(()=>{\n         alert('ERROR');\n       })\n\n       /* rails側への送信*/ \n      let data = {\n        name: state.name,\n        price: state.price,\n        category: state.category,\n        info: state.info\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/items/${props.item.id}`, data)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n        setState({\n          name: '',\n          price: '',\n          category: '',\n          info: ''\n        })\n        props.history.push('/items');\n      })\n      .catch(function(){\n        alert('error');\n      })\n      setShow({display: 'none'});\n    }\n    \n  }\n  return(\n    <>\n       <div className=\"text-center mt-5 mb-4\">\n         <h2 data-testid=\"userNewtitle\">{state.name}編集</h2>\n       </div>\n       <Row>\n         <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n         <Button \n           variant=\"secondary\" \n           onClick={homeComponent}\n           className=\"mb-3\"\n         >\n          戻る\n         </Button>\n           <Form onSubmit={sendItemParameter}>\n             <Form.Group>\n               <Form.File  label=\"商品画像\" multiple accept=\"image/*\" onChange={updateFile} />\n             </Form.Group>\n             <Form.Group>\n               <Form.Label>商品名</Form.Label>\n               <Form.Control type=\"text\" name=\"name\" placeholder=\"*必須です。\" className=\"h8\" required onChange={itemInput} value={state.name} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>価格</Form.Label>\n               <Form.Control type=\"price\" name=\"price\" placeholder=\"*必須です。\" required onChange={itemInput} value={state.price} />\n             </Form.Group>\n \n             <Form.Group>\n               <Form.Label>カテゴリー</Form.Label>\n               <div class=\"balloon1\" style={show}>\n                 <p>選択してください。</p>\n               </div>\n                 <Form.Control as=\"select\" name=\"category\" value={state.category} onChange={itemInput}>\n                   <option value=\"\">選択してください  </option>\n                  {[\"青魚\",\"白身魚\",\"大型魚\",\"いか、タコ\",\"貝\",\"その他\"].map((value, i)=>\n                    <option key={i} value={value}>{value}</option>\n                  )}\n                 </Form.Control>\n             </Form.Group>\n                \n             <Form.Group>\n               <Form.Label>商品説明</Form.Label>\n               <textarea \n                 name=\"info\" \n                 cols=\"30\" \n                 rows=\"10\" \n                 value={state.info}\n                 onChange={itemInput}\n                 className=\"form-control\">{state.info}</textarea>\n             </Form.Group>\n \n               <Button \n                 type=\"submit\" \n                 variant=\"primary\" \n                 className=\"btn-block mt-4\">\n                   送信\n               </Button>\n           </Form>\n           \n         </Col>\n       </Row>\n    </>\n   )\n}\nexport default withRouter(connect(state=>state)(ItemEdit));\n/***************************************************************************************************** */","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Table, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport { getOption } from './setItemData';\nimport Select from 'react-select';\nimport { connect } from 'react-redux';\n\nconst Process = (props)=>{\n/********************加工データ************************************************************** */\n  const getProcessData = ()=>{\n     axios\n        .get(`https://uematsu-backend.herokuapp.com/processings/${props.item.id}`)\n        .then((res)=>{\n           \n           localStorage.removeItem('process');\n           localStorage.setItem('process', JSON.stringify(res.data));\n           setProcess(res.data);\n        \n        })\n        .catch((error)=>{\n           console.log(error);\n        })\n     }\n\n/*************************ステートおよび各種セット************************************************ */\n   useEffect(()=>{\n     getProcessData();\n   })\n   let item = props.item;\n   let options = getOption();\n\n   const[process, setProcess] = useState([]);\n   const [selectedOption, setSelectedOption] = useState(null);\n/***********************加工データサーバー送信**************************************** */\n   const addProcess = (e)=>{\n     e.preventDefault();\n     let data = selectedOption;\n     let obj={};\n     obj[\"id\"] = props.item.id;\n     obj[\"data\"] = selectedOption;\n     axios.post('https://uematsu-backend.herokuapp.com/processings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n    \n   }\n   /******************************ログイン/未ログイン切り替え********************************************************** */\n   const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n  useEffect(()=>{\n    loginUserCheck();\n  })\n /****************************************削除加工法*************************************************************** */\n    const deleteProcess = (i,count)=>{\n      if(window.confirm('削除してよろしいですか？')){\n        axios\n          .delete(`https://uematsu-backend.herokuapp.com/processings/${i}`)\n          .then((response)=>{\n            alert(response.data.message); \n            let data = process.slice();\n            data.splice(count,1);\n            setProcess(data);\n          })\n          .catch((error)=>{\n            console.log(error);\n          })\n      }\n    }\n\n  return(\n   <>\n    <div className=\"text-center font-weight-bold h2 mt-5 mb-3\">{item.name}加工法管理画面</div>\n    <Row>\n      <Col md={{ span: 4, offset: 4 }} className=\"p-5 bg-light shadow\">\n      <Form onSubmit={addProcess}>\n        <Form.Group>\n          <Form.Label>加工法の登録</Form.Label>\n          <Select\n          　isMulti\n            defaultValue={selectedOption}\n            onChange={setSelectedOption}\n            options={options}\n          />\n        </Form.Group>\n        <Form.Control type=\"submit\" className=\"bg-primary text-white\"  value=\"追加\" />\n      </Form>\n      {process.length >0?\n       <>\n         <div className=\"text-center font-weight-bold mt-5\">登録加工法一覧</div>\n         <Table bordered>\n           <thead>\n             <tr>\n               <th className=\"text-white bg-dark text-center\">加工法</th>\n               <th className=\"text-white bg-dark text-center\"></th>\n             </tr>\n           </thead>\n           <tbody>\n             {process.map((data,count)=>(\n               <tr>\n                 <td className=\"text-center\">{data.processing_name}</td>\n                 <td>\n                   <Button\n                    variant=\"danger\"\n                    className=\"btn-block\"\n                    onClick={(i)=>deleteProcess(data.id, count)}\n                   >削除</Button>\n                 </td>\n               </tr>\n             ))}\n           </tbody>\n         </Table>\n       </>\n       : \n       <></>\n       }\n      </Col>\n    </Row>  \n\n\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Process))","\n export const getOption = ()=>{\n   return [\n    { value: '刺身', label: '刺身' },\n    { value: '切り身', label: '切り身' },\n    { value: '煮物用', label: '煮物用' },\n    { value: '塩焼き用', label: '塩焼き用' },\n    { value: 'フライ用', label: 'フライ用' },\n    { value: '刺身/切り身', label: '刺身/切り身' },\n   ];\n }","import { useEffect, useState } from 'react';\nimport { Row, Col, Table, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\n function Index(props){\n  const[state,setState] = useState({\n    data: localStorage.getItem('orders') ? JSON.parse(localStorage.getItem('orders')) : []\n  })\n  /*************APIによるuser一覧**********************************/\n   async function orderCall(){\n     \n     await axios\n       .get('https://uematsu-backend.herokuapp.com/orders')\n       .then((res)=>{\n          localStorage.setItem('orders', JSON.stringify(res.data));\n          \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n       setState({\n        data: JSON.parse(localStorage.getItem('orders'))\n      })\n  }\n    useState(orderCall());\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck());\n\n  /****************************編集**************************************** */\n   const editPage = (id)=>{\n     props.orderEditIdget(id);\n     props.history.push(\"/orders_edit\");\n   } \n\n\n   /****************************削除*********************************************** */\n   function deleteOrder(i){\n    if(window.confirm('削除してよろしいですか？')){\n      axios\n       .delete(`https://uematsu-backend.herokuapp.com/orders/${i}`)\n       .then((response)=>{\n         alert(response.data.message); \n       })\n       .catch((error)=>{\n          console.log(error);\n       })\n    \n    }\n   }\n  \n \n  return(\n    <div className=\"image\">\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"usertitle\">店頭商品一覧</h2>\n      </div>\n      <Row>\n\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          <Button \n            variant=\"primary\"\n            onClick={()=>props.history.push('orders_new')}\n          >店頭商品追加</Button>\n          {state.data.length > 0 ?\n\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th className=\"text-center align-middle bg-dark text-white\">商品名</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">価格</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">合計金額</th>\n                  <th className=\"text-center align-middle bg-dark text-white\">在庫</th>\n                  <th className=\"text-center align-middle bg-dark text-white\"></th>\n                </tr>\n              </thead>\n              <tbody>\n                {state.data.map((value)=>(\n                  <tr key={value.name}>\n                    <td className=\"text-center align-middle\">{value.name}</td>\n                    <td  className=\"text-center align-middle\">{value.price}</td>\n                    <td  className=\"text-center align-middle\">{Number(value.price) * Number(value.stock)}</td>\n                    <td  className=\"text-center align-middle\">{value.stock}</td>\n                    <td>\n                      <Button \n                        variant=\"primary\"\n                        onClick={(i)=>editPage(value.id)}\n                        className=\"ml-3\"\n                      >編集</Button>\n\n                      <Button \n                        variant=\"danger\"\n                        onClick={(i)=>deleteOrder(value.id)}\n                        className=\"ml-3\"\n                      >削除</Button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n            :\n            <div>データなし</div>\n            }\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport 'react-select/dist/react-select.browser.cjs';\nimport { formSelectItems } from './setItem';\nimport { connect } from 'react-redux';\n\nconst  New = (props)=>{\n  const[state, setState] = useState({\n    price: '',\n    stock: ''\n  });\n  const [selectedOption, setSelectedOption] = useState(null);\n  const options = formSelectItems();\n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n\n  const backIndex = ()=>{\n    props.history.push('/orders');\n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name: selectedOption.value, price: state.price, stock: state.stock};\n    axios.post('https://uematsu-backend.herokuapp.com/orders', sendData)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n      props.history.push('/orders');\n  }\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">店頭商品追加</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={backIndex}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <Select\n                options={options}\n                defaultvalue={selectedOption}\n                onChange={setSelectedOption}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(New));","import axios from 'axios';\n\nexport const formSelectItems = ()=>{\n  const itemData =JSON.parse(localStorage.getItem('items'));\n  if(!itemData){\n    axios\n    .get('https://uematsu-backend.herokuapp.com/items')\n    .then((res)=>{\n       localStorage.removeItem('items');\n       localStorage.setItem('items', JSON.stringify(res.data));\n    })\n    .catch((error)=>{\n       console.log(error);\n    })\n  }\n  let options = [];\n  itemData.forEach(item=>{\n    options.push({value: item.name, label: item.name});\n  })\n  return options;\n  \n}","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport '../users/users.css';\nimport { connect } from 'react-redux';\n\n/**************************************************************************************** */\nconst  OrderEdit = (props)=>{\n\n const getitemData = ()=>{\n  let orders = []\n  let datas = JSON.parse(localStorage.getItem('orders'));\n  datas.forEach((data)=>{\n    if(data.id === props.id){\n     orders.push(data);\n    }\n  });\n  return orders\n }\n let orders = getitemData();\n \n\n/*********************************state******************************************************* */\n  \n  const[state, setState] = useState({\n    name: orders.length>0? orders[0].name : [],\n    price:orders.length>0? orders[0].price :[],\n    stock: orders.length>0? orders[0].stock : []\n  })\n/******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n  const homeComponent = ()=>{\n    props.history.push('/orders')  \n  }\n  const dochange = (e)=>{\n    const target = e.target;\n    const name = target.name;\n    const value = target.value\n    setState({...state, [name]: value});\n  }\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let sendData ={name:state.name, price: state.price, stock: state.stock};\n    axios.patch(`https://uematsu-backend.herokuapp.com/orders/${props.id}`, sendData)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n      props.history.push('/orders');\n  }\n  \n  return(\n    <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">{orders.length>0? orders[0].name : ''}編集</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n        <Button \n          variant=\"secondary\" \n          className=\"mb-3\"\n          onClick={homeComponent}\n        >\n         戻る\n        </Button>\n          <Form onSubmit={doSubmit}>\n            <Form.Group>\n              <Form.Label>商品名</Form.Label>\n              <div className=\"font-weight-bold\">{state.name}</div>\n              <Form.Control \n                type=\"hidden\"\n                name=\"name\"\n                value={state.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>価格</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"price\" \n                placeholder=\"*必須です。\" \n                value={state.price} required\n                onChange={dochange}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>在庫</Form.Label>\n              <Form.Control \n                type=\"number\" \n                name=\"stock\" \n                value={state.stock}\n                onChange={dochange}\n              />\n            </Form.Group>\n\n\n              <Button \n                type=\"submit\" \n                variant=\"primary\" \n                className=\"btn-block mt-4\">\n                  送信\n              </Button>\n          </Form>\n          \n        </Col>\n      </Row>\n   </>\n   )\n}\nexport default withRouter(connect(state=>state)(OrderEdit));\n/***************************************************************************************************** */","export default __webpack_public_path__ + \"static/media/fishs2.d6a1f15c.jpg\";","import { useEffect, useState } from 'react';\nimport { Image, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport '../App.css'\nimport { connect } from 'react-redux';\nimport image from '../images/fishs2.jpg';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCartPlus, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart } from '../store/Store';\n\n\nconst rightAreaTable={\n  height: '200px',\n  overflow: 'scroll'\n}\n\nconst nameTitle={\n  background: '#136FFF',\n  padding: '5px',\n  color:'white',\n  border:'1px solid #f0f0f0',\n  maxWidth: '100%',\n  margin: '0'\n}\nconst buycheck={\n  padding: '5px 0',\n  background: 'brown',\n  color:'white',\n  fontSize:'16px',\n  textAlign: 'center',\n  borderLeft:'6px solid #c0c0c0'\n\n}\nconst buttonHeight={\n  height:'100px'\n}\n\n function Index(props){\n  let localData = JSON.parse(localStorage.getItem('orders'));\n\n  /*買い物カゴに入れた際の在庫の更新*/\n\n  if(props.fixItemData){\n    localData.forEach((data,i)=>{\n      if(props.fixItemData.id == data.id){\n        localData[i] = props.fixItemData;\n        /*localStorage.setItem('orders', JSON.stringify(localData));*/\n      }\n    })\n\n  }\n  let modalData = [];\n \n\n  /************************ステート*************************************** */\n  const[itemData, setState] = useState(\n    localData ? localData : []\n  )\n \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck);\n/*******************************************買い物ボタン*********************************************************************** */\n  const buyItem = (item)=>{\n    props.sendCustomerData(item);\n    props.history.push('/customor_show');\n  }\n/*******************************************買い物カゴアイテム削除*********************************************************************** */\nconst deleteCartItem = (index)=>{\n  let action = cartDeleteCart(index);\n  props.dispatch(action);\n}\n/********************************************買い物カゴ合計金額*************************************************************************************** */\n const itemTotalMoney = ()=>{\n   let total = 0;\n   props.buyCarts.map((data)=>{\n     total += Number(data.price) * Number(data.num);\n   })\n   return total;\n }\n /********************************************に買い物確認情報送信*************************************************************************************** */\n const sendShoppingData =()=>{\n   props.sendCartItemToConfirm(itemData);\n   props.history.push('/customer_confirm');\n }\n  return(\n    <div>\n       <img src={image} alt=\"画像\" className=\"costomer-imag\"/>\n       <div className=\"customor-main\">\n    　　　<h1 className=\"customor-main-title\">本日入荷商品紹介</h1>\n         <article>\n           <section class=\"gallery\">\n             <h2 className=\"customer-article-title\">商品紹介</h2>\n             {itemData.length > 0 ? \n               <ul>\n                 {itemData.map((item)=>(\n                   <li>\n                       <Image src={`http://yukiabineko.sakura.ne.jp/react/${item.name}.jpg`} alt=\"表示できません\" roundedCircle /><br/>\n                       <ul>\n                         <li style={nameTitle}>{`商品名${item.name}`}</li>\n                         <li style={nameTitle}>\n                           価格&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.price}</span>円\n                         </li>\n                         <li style={nameTitle}>\n                           在庫&emsp;\n                           <span className=\"text-warning font-weight-bold\">{item.stock}</span>(尾/個)\n                         </li>\n                         <li style={nameTitle} className=\"bg-white\">\n                           {props.userData.length>0 && props.userData[0].admin? \n                             '' \n                             : \n                             Number(item.stock) > 0? \n                              <button \n                                className=\"btn btn-success btn-block\"\n                                onClick={()=>buyItem(item)}\n                              >\n                               <FontAwesomeIcon icon={faCartPlus}  />買い物する\n                              </button>\n                             : \n                             <span className=\"text-danger font-weight-bold\">売り切れ</span>\n                           }\n                         </li>\n                       </ul>\n                     \n                   </li>\n                 ))}\n               </ul>\n                :\n               ''\n              }\n            \n           </section>\n\n         </article>\n\n         {props.userData.length>0 && props.userData[0].admin? \n            <div className=\"customor-right\">\n              <h5 style={buycheck}>管理者表示</h5>\n              <div className=\"p-3 bg-lignt font-weight-bold\">管理者のため表示されません</div>\n            </div>\n            : \n            <div className=\"customor-right\">\n            <h5 style={buycheck}>買い物確認</h5>\n             <p className=\"font-weight-bold text-center\">{props.userData.length>0? props.userData[0].name : ''}さん</p>\n             <p className=\"font-weight-bold bg-light p-2\">買い物点数&emsp;<span className=\"text-danger\">{props.buyCarts.length}</span>件</p>\n             \n             {props.buyCarts.length >0 ? \n              <div style={ rightAreaTable}>\n               <Table bordered>\n                 <thead className=\"bg-primary text-white\">\n                   <th>商品名</th>\n                   <th>個数</th>\n                   \n                 </thead>\n                 <tbody>\n                   {props.buyCarts.map((data,index)=>(\n                     <tr>\n                       <td className=\"align-middle\">{data.name}</td>\n                       <td className=\"text-center\">\n                         {data.num}<br/>\n                         {/*<button\n                          className=\"btn btn-danger\"\n                          onClick={()=>deleteCartItem(index)}\n                         >削除</button>*/}\n                       </td>\n                     </tr>\n                   ))}\n                 </tbody>\n               </Table>\n               </div>\n               : \n               ''\n             }\n           \n             <p className=\"m-0\">合計金額</p>\n             <p className=\"font-weight-bold bg-dark p-2 text-white text-right\">{itemTotalMoney()}</p>\n             {props.buyCarts.length >0? \n               <button \n                 className=\"btn btn-primary btn-block font-weight-bold\" \n                 onClick={sendShoppingData}\n                 style={buttonHeight}>\n                 <FontAwesomeIcon icon={faCashRegister} />\n                   &nbsp;買い物確認\n              </button>\n               : \n               ''\n             }\n          </div>\n          }\n         \n      </div>\n    </div>\n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { cartsAdd } from '../store/Store';\n\nconst table ={\n  width: '100%',\n  border: '1px solid #c0c0c0'\n}\nconst select={\n  width:'30%',\n  height:'40px'\n}\n\n/**************************************************************************************** */\n\nconst  Show = (props)=>{\n  const[state, setState] = useState({\n    number: null,\n    process: '',\n    total: props.itemData? props.itemData.price : 0\n  })\n  const stockOption = ()=>{\n    let array = []\n    for(let i=0; i<=Number(props.itemData.stock); i++){\n       array.push(i)\n    }\n    return array\n  }\n  /******************************ログイン/未ログイン切り替え********************************************************** */\nconst loginUserCheck = ()=>{\n  if(props.userData.length===0){\n    props.history.push('/login');  \n  }\n}\nuseState(loginUserCheck());\n /********************************カテゴリーの配列化************************************************** */\n const categoryArray = ()=>{\n   return  props.itemData.process.split(',')\n }\n /********************************注文数変更************************************************** */\n const numberChange = (e)=>{\n   setState({\n     number: e.target.value,\n     process: state.process,\n     total:  Number(props.itemData.price) * Number(e.target.value)\n   })\n}\n/********************************加工方法変更************************************************** */\nconst processChange = (e)=>{\n  setState({\n    number: state.number,\n    process: e.target.value,\n    total:  state.total\n  })\n}\n/********************************サブミット************************************************** */\n\n  const doSubmit = (e)=>{\n    e.preventDefault();\n    let propData = props.itemData;\n    let stock = Number(props.itemData.stock);\n    let minusNumber = Number(state.number);\n    if(minusNumber > 0){\n      stock -= minusNumber;\n      propData.stock = stock;\n      props.changeItemData(propData);\n      let action = cartsAdd({name: propData.name, num: state.number, price: propData.price, process:　state.process});\n      props.dispatch(action);\n      props.history.push('/customor/index');\n    }\n    else{\n      alert('数量を入力してください。');\n    }\n  }\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n   {props.itemData? \n     <>\n      <div className=\"text-center mt-5 mb-4  font-weight-bold\">\n        <h2 className=\"font-weight-bold text-info\">{props.itemData.name}注文</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n            <form onSubmit={doSubmit} className=\"W-100\">\n             <Table  style={table}>\n               <thead>\n                 <th className=\"bg-dark text-center text-white\">商品名</th>\n                 <th className=\"bg-dark text-center text-white\">価格</th>\n                 <th className=\"bg-dark text-center text-white\">買い上げ数</th>\n                 <th className=\"bg-dark text-center text-white\">加工法</th>\n                 <th className=\"bg-dark text-center text-white\">合計金額</th>\n               </thead>\n               <tbody>\n                 <tr>\n                   <td className=\"font-weight-bold text-center align-middle\">{props.itemData.name}</td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{props.itemData.price}</td>\n                   <td className=\"font-weight-bold text-center\">\n                     <select className=\"form-control\" onChange={numberChange}>\n                       {stockOption().map((num)=>(\n                         <option>{num}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle\">\n                   <select className=\"form-control\" onChange={processChange}>\n                       <option value=\"\">--加工法を選択してください--</option>\n                       {categoryArray().map((process)=>(\n                         <option>{process}</option>\n                       ))}\n                     </select>\n                   </td>\n                   <td className=\"font-weight-bold text-center align-middle text-danger\">{state.total}</td>\n                 </tr>\n               </tbody>\n             </Table>\n              <div className=\"text-left\">\n                <input type=\"submit\" value=\"追加\"　className=\"btn btn-primary btn-lg\" />\n              </div>\n             </form>\n        </Col>    \n      </Row>\n     </>\n     : \n     ''\n     }\n      \n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","\nimport '../App.css'\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\n\nconst NoData = ()=>{\n  return(\n    <div className=\"p-5 bg-secondary text-center font-weight-bold text-white mt-4 \">注文商品はありません。</div>\n  )\n}\nexport default NoData;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport { cartEmpty, cartsAdd,  cartUpdate } from '../store/Store';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingCart, faFish, faYenSign, faCalculator, faUtensils, faCashRegister } from \"@fortawesome/free-solid-svg-icons\";\nimport { cartDeleteCart, sendLoginData  } from '../store/Store';\nimport Empty from './NoData';\n\nconst title={\n  fontFamily: 'ヒラギノ明朝',\n  color: '#0000CD',\n  fontWeight: 'bold',\n  marginTop: '8%'\n}\nconst span ={\n  color: '#6927FF',\n  marginRight: '20px'\n}\nconst th={\n  background: '#8EB8FF',\n  color: '#eee',\n  textAlign: 'center'\n}\n\n/**************************************************************************************** */\n\nconst  Confirm = (props)=>{\n \n let localData = JSON.parse(localStorage.getItem('orders'));\n\n/*カートの商品の数量のみ配列化 */\n\nconst cartNum = ()=>{\n  let array = [];\n  props.buyCarts.forEach((data) => {\n    array.push(data.num);\n  });\n  return array;\n}\n \n/***************************** ステート管理 ************************************************************** */\nconst[state, setState] = useState(props.orderData); /* 全体の在庫*/\nconst[num, setNumber] = useState(cartNum());  /* 現在の注文数ステータス */\n\n\n/***************************** セレクトの数量表示 ************************************************************** */\nconst selectNumber =(number)=>{\n  let array = [];\n  for(let i=0; i<= Number(number); i++){\n    array.push(i);\n  }\n  return array;\n}\n/***********************サーバー送信***************************************************************** */\nconst sendServer = ()=>{\n    const params = new FormData();\n    params.append('email', props.userData[0].email);\n    params.append('name', props.userData[0].name);\n\n     /* PHP送信　*/\n    axios.post('http://yukiabineko.sakura.ne.jp/mail.php',\n　　　 params,\n      {\n        headers:{\n          'content-type': 'multipart/form-data',\n        },\n      }\n    ).then((res)=>{\n        console.log(res.data);\n    }).catch(()=>{\n    })\n\n\n  let sendData = props.buyCarts;\n   let obj = {}\n   obj['id'] = props.userData[0].id;\n   obj['data'] = sendData\n\n   /* rails送信　*/\n   axios.post('https://uematsu-backend.herokuapp.com/shoppings', obj)\n      .then(function (response) {\n        /*railsからメッセージ*/\n\n        alert(response.data.message); \n        axios.get(`https://uematsu-backend.herokuapp.com/users/${props.userData[0].id}`).then(function(response){\n           let action = sendLoginData (response.data);\n           props.dispatch(action);\n\n        }).catch(function(err){\n         console.log(err);\n        });\n      })\n      .catch(function(){\n        alert('error');\n      }) \n    \n    props.history.push('/customor');  /*ユーザーページへ移動*/\n    props.dispatch(cartEmpty());  /*買い物カゴリセット*/\n\n  }\n  /**********************************商品アイテム削除************************************************************************************************ */\n  const deleteItem = (index)=>{\n    let action = cartDeleteCart(index);\n    props.dispatch(action);\n    if(props.buyCarts.length == 0){\n      props.history.push('/shoppings');\n    }\n  }\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useEffect(()=>{\n    loginUserCheck();\n    })\n/******************************セレクト切り替え********************************************************** */\nconst doSelect = (e)=>{\n  let currentNumber = Number(num[Number(e.target.name)]);\n  let changeNumber = Number(e.target.value);\n  let calcNumber = changeNumber - currentNumber;\n  let cartItemName = props.buyCarts[Number(e.target.name)].name;\n  let stateData = state.slice();\n  stateData.forEach((data,i)=>{\n    let dataNumber = Number(data.stock);\n    if(data.name == cartItemName){   /*セレクトの商品と全商品検証*/\n      /*増やしたか？　減らしたか? */\n      \n      if(calcNumber > 0){\n         stateData[i].stock = dataNumber - calcNumber;  /*数量増やした場合全体在庫減る*/\n      }\n      else if(calcNumber <0){\n        stateData[i].stock = dataNumber + (currentNumber - changeNumber); /*数量増やした場合全体在庫増えるまたマイナスになるので計算反転*/\n      }\n    }\n  });\n  /*redux buycart変更*/\n  let buycart = props.buyCarts.slice();\n\n  let thiscartData = {\n    name: cartItemName,\n    num: changeNumber,\n    price: props.buyCarts[Number(e.target.name)].price,\n    process:props.buyCarts[Number(e.target.name)].process\n  }\n  /*リスト(買い物カゴ)の内変更かけたものを入れ替え*/\n\n  buycart[Number(e.target.name)] = thiscartData;\n  /*ストア送信(update)*/\n\n  let delAction =  cartUpdate(buycart);\n  props.dispatch(delAction);\n  \n\n  /*在庫ステート変更*/\n\n  setState(stateData);\n  let numArray = num.slice();\n  numArray[Number(e.target.name)] = changeNumber;\n  setNumber(numArray);\n}\n\n/********************************************************************************************************************************** */\n  return(\n   <>\n       <div className=\"text-center mt-5 mb-3\">\n         <h1 style={title}>\n           <span style={span}><FontAwesomeIcon icon ={faShoppingCart} /></span>\n           注文確認\n        </h1>\n       </div>\n       <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n          {props.buyCarts.length >0? \n          <Form>\n           <Table bordered className=\"mt-3\">\n             <thead>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faFish} />\n                  </span>\n                  商品名\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faYenSign} />\n                  </span>\n                  価格\n               </th>\n               <th style={th}>\n                  <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faCalculator} />\n                  </span>\n                  数\n               </th>\n               <th style={th}>\n                 <span className=\"text-primary mr-2 h5\">\n                    <FontAwesomeIcon icon={faUtensils} />\n                  </span>\n                  加工法\n               </th>\n               <th style={th}>合計</th>\n               <th style={th}></th>\n             </thead>\n             <tbody>\n               {props.buyCarts.map((data,index)=>(\n                 <tr>\n                   <td className=\"text-dark text-center font-weight-bold\">{data.name}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">{data.price}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                      <label>{\"現在\" + num[index]}</label>\n                      <Form.Control as=\"select\" size=\"sm\" custom value={num[index]} onChange={(index)=>doSelect(index)} name={index} >\n                       {state.map((order)=>(\n                         order.name === data.name? \n                         /*在庫にすでに選択されている数量足した数*/\n                         \n                           selectNumber(Number(order.stock) + Number(num[index])).map((value)=>(\n                             <option key={value}>{value}</option>\n                           ))\n                           : \n                           ''\n                       ))}\n                      </Form.Control>\n                   </td>\n                   <td className=\"text-dark text-center font-weight-bold\">{data.process}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">{Number(data.price) * Number(num[index])}</td>\n                   <td className=\"text-dark text-center font-weight-bold\">\n                     <Button \n                       variant=\"danger\"\n                       onClick={()=>deleteItem(index)}\n                     >\n                    削除\n                     </Button>\n                   </td>\n                 </tr>\n               ))}\n             </tbody>\n           </Table>\n           <div className=\"text-center\">\n             <Button  \n               variant=\"primary\"\n               className=\"btn-lg\"\n               onClick={sendServer}\n             >\n             <span><FontAwesomeIcon icon={faCashRegister} /></span>\b\n             注文確定\n             </Button>\n           </div>\n         </Form> \n           : \n          <Empty />\n         }\n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Confirm))\n","/*当日日付のみ表示するための分岐処理*/\n\nexport const viewDataBranch = (date)=>{\n  /*本日*/\n\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = today.getMonth() + 1;\n  const day = today.getDate();\n\n  /*注文データ*/\n\n  const createDate = new Date(date);\n  const c_year = createDate.getFullYear();\n  const c_month = createDate.getMonth() + 1;\n  const c_day = createDate.getDate();\n\n  /*照合*/\n  if( year === c_year && month === c_month && day === c_day){\n     return 1;\n  }\n  else{\n     return 0;\n  }\n\n}\n/********************************************************************************************* */\n/*オーダーで今日の日付のものがあるかチェック*/\n\nexport const todayOdrersChecker = (shoppings)=>{\n  let target = 0;\n  shoppings.forEach((shopping)=> {\n     let data = viewDataBranch(shopping.shopping_date);\n     /*各オーダーで今日日付のものがあれば加算*/\n     if(data === 1) target ++;\n  });\n  return target;\n}\n/*ヘッダー表示用明日の日付アイテムあるか確認 */\n\nexport const todayOrderExisting =(shoppings)=>{\n   let todayObjects = [];\n   let date = new Date();\n   let year = date.getFullYear();\n   let month = date.getMonth() + 1;\n   date.setDate(date.getDate() + 1); \n   let day = date.getDate();  /*tomorrow */\n\n   shoppings.forEach((shopping)=>{\n      let t_date = new Date(shopping.shopping_date);\n      let t_year = t_date.getFullYear();\n      let t_month = t_date.getMonth() + 1;\n      let t_day = t_date.getDate();\n      if( year == t_year && month == t_month && day == t_day){\n         todayObjects.push(shopping);\n      }\n   });\n   return todayObjects;\n}","import { useEffect, useState } from 'react';\nimport { Row, Col, Table, Button,Modal, Image } from 'react-bootstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport '../App.css';\nimport { viewDataBranch, todayOdrersChecker } from \"./settiing\";\nimport { daySetting } from '../users/setting';\n\n const customButton ={\n   border: \"none\",\n   borderBottom: \"1px solid #0000bb\",\n   background: \"none\",\n   color: \"#0000bb\",\n   outline: 'none',\n   fontWeight: 'bold'\n }\n\n function Index(props){\n  let localData = JSON.parse(localStorage.getItem('shoppings'));\n  \n\n  /************************ステート*************************************** */\n  const[shopingData, setState] = useState(\n    localData ? localData : []\n  )\n  \n  /*************APIによるshopping一覧**********************************/\n  async function shoppingsCall(){\n    await axios\n      .get('https://uematsu-backend.herokuapp.com/shoppings')\n      .then((res)=>{\n         localStorage.removeItem('shoppings');\n         setState(res.data);\n         localStorage.setItem('shoppings', JSON.stringify(res.data));\n      })\n      .catch((error)=>{\n         console.log(error);\n      })\n     \n   }\n   useState(shoppingsCall());\n  \n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n    useState(loginUserCheck()); \n/***************************************ステータス分岐********************************************************************** */\n  const orderStatus = (status)=>{\n    switch (status) {\n      case 0:\n        return <div className=\"bg-info text-center text-white mt-3\">申請中</div>;\n      case 1:\n        return <div className=\"bg-warning text-center text-white mt-3\">加工済み</div>;\n      case 2:\n        return <div className=\"bg-danger text-center text-white mt-3\">受け渡し済み</div>;\n    default:\n        break;\n    }\n  }\n  /****************************************カスタムbutton hover*************************************************** */\n  const hoverButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"#BAD3FF\";\n  }\n  /****************************************カスタムbutton out*************************************************** */\n  const outButton = (i)=>{\n    document.getElementById('customButton' + i).style.background = \"none\";\n  }\n  /*************************************ステータス変更/確認ページへ************************************************************************ */\n  const showShoppingStatus =(data)=>{\n    props.sendShoppingData(data);\n    props.history.push('/shoppings_show');\n  }\n\n  return(\n    <div className>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"itemstitle\" className=\"font-weight-bold text-info\">注文確認表</h2>\n      </div>\n      <Row>\n        <Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n          {(shopingData.length >0 && todayOdrersChecker(shopingData) > 0)? \n            <Table bordered striped>\n              <thead>\n              <th className=\"bg-primary text-white text-center\">受け渡し日</th>\n                <th className=\"bg-primary text-white text-center\">商品名</th>\n                <th className=\"bg-primary text-white text-center\">お客様名</th>\n                <th className=\"bg-primary text-white text-center\">価格</th>\n                <th className=\"bg-primary text-white text-center\">個数</th>\n                <th className=\"bg-primary text-white text-center\">加工法</th>\n                <th className=\"bg-primary text-white text-center\">合計金額{todayOdrersChecker(shopingData).length}</th>\n              </thead>\n              <tbody>\n                {shopingData.map((data,i)=>(\n                  /* 当日のみ表示 */\n\n                  viewDataBranch(data.shopping_date) === 1? \n                  <tr>\n                  <td className=\"font-weight-bold text-center align-middle\">{daySetting(data.shopping_date)}</td>\n                  <td className=\"font-weight-bold text-center align-center\">\n                    <button \n                      style={customButton} \n                      id={`customButton${i}`}\n                      onMouseOver={()=>hoverButton(i)}\n                      onMouseOut={()=>outButton(i)}\n                      className=\"customButton\"\n                      onClick={()=>showShoppingStatus(data)}\n                      >{data.name}</button>\n                    \n                    <br/>\n                    {orderStatus(data.status)}\n                  </td>\n                  <td className=\"font-weight-bold text-center align-middle\">{`${data.user_name}様`}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">{data.price}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.num}</td>\n                  <td className=\"font-weight-bold text-center align-middle\">{data.process}</td>\n                  <td className=\"font-weight-bold text-center text-danger align-middle\">\n                    { Number(data.price) * Number(data.num) }\n                  </td>\n                </tr>\n                   : \n                   ''\n                ))}\n              </tbody>\n            </Table>\n            : \n            <div className=\"bg-secondary text-center text-white font-weight-bold p-3\">データがありません。</div>\n          }\n          \n        </Col>\n      </Row>\n    </div>  \n  )\n}\nexport default withRouter(connect((state)=>state)(Index))","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Button, Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUtensils, faTruck, faClipboard } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst font ={\n  fontSize: '24px'\n}\n\nconst  Show = (props)=>{\n/******************************ログイン/未ログイン切り替え********************************************************** */\n    const loginUserCheck = ()=>{\n      if(props.userData.length===0){\n        props.history.push('/login');  \n      }\n    }\n   useState(loginUserCheck);\n\n    /*ステータスによる条件訳*/\n\n    const statusLayout = ()=>{\n      switch (props.show.status) {\n        case 0:\n          return <div className=\"bg-info text-white text-center\">申請中</div>;\n        case 1:\n          return <div className=\"bg-warning text-white text-center\">加工済み</div>;\n        case 2:\n          return <div className=\"bg-danger text-white text-center\">受け渡し済み</div>;\n        default:\n          break;\n      }\n    }\n    /* ステータス変更サーバー送信 */\n    \n    const sendStatusNumber = (num)=>{\n\n       /* rails側への送信*/\n      \n       const params = {\n        id: props.show.id,\n        name: props.show.user_name,\n        status: num\n      }\n      axios.patch(`https://uematsu-backend.herokuapp.com/shoppings/${props.show.id}`, params)\n      .then(function (response) {\n        /*railsからメッセージ*/\n        alert(response.data.message); \n      })\n      .catch(function(){\n        alert('error');\n      })\n      props.history.push('/shoppings');\n    }\n    \n  return(\n   <>\n    <div className=\"text-center mt-5\">\n      <h2 className=\"font-weight-bold\">注文状況確認/変更</h2>\n    </div>\n    <Row>\n      < Col md={{ span: 8, offset: 2 }} className=\"p-5 bg-light shadow\">\n        {props.show? \n          <div>\n          {/*　注文情報 */ }\n\n          <Table bordered>\n            <tbody>\n              <tr>\n                <th className=\"bg-primary text-white\">商品名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{props.show.name}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">お客様名</th>\n                <td colSpan=\"3\" className=\"font-weight-bold\">{`${props.show.user_name}様`}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">価格</th>\n                <td className=\"font-weight-bold\">{props.show.price}</td>\n                <th className=\"bg-primary text-white\">注文数</th>\n                <td className=\"font-weight-bold\">{props.show.num}</td>\n              </tr>\n              <tr>\n                <th className=\"bg-primary text-white\">合計金額</th>\n                <td className=\"font-weight-bold\">{Number(props.show.price) * Number(props.show.num)}</td>\n                <th className=\"bg-primary text-white\">注文状況</th>\n                <td className=\"font-weight-bold\">{statusLayout()}</td>\n               \n              </tr>\n            </tbody>\n          </Table>\n\n          {/* 変更エリア */}\n           <p className=\"font-weight-bold\">現在の注文商品の状況を変更するには<br/>対応するボタンを押してください。</p>\n           <fieldset className=\"bg-secondary p-2\">\n            {props.show.status === 0? \n              <>\n                 <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(1)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n              /* ステータス加工済み */\n              \n              props.show.status === 1 ? \n              <>\n                 <Button \n                    variant=\"primary\"\n                    className=\"btn-block p-4 font-weight-bold text-white \"\n                    onClick={()=>sendStatusNumber(0)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                   申請中に変更\n                 </Button>\n                 <Button \n                    variant=\"danger\"\n                    className=\"btn-block p-4 font-weight-bold text-white\"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                    <FontAwesomeIcon icon={ faTruck } />&nbsp;\n                   商品受け渡し済み\n                 </Button>\n              </>\n              : \n               /* ステータス受け渡し済み */\n\n               <>\n               <Button \n                  variant=\"primary\"\n                  className=\"btn-block p-4 font-weight-bold text-white \"\n                  onClick={()=>sendStatusNumber(0)}\n                  style={font}\n                >\n                <FontAwesomeIcon icon={ faClipboard  } />&nbsp;\n                 申請中に変更\n               </Button>\n               <Button \n                    variant=\"warning\"\n                    className=\"btn-block p-4 font-weight-bold text-light \"\n                    onClick={()=>sendStatusNumber(2)}\n                    style={font}\n                  >\n                  <FontAwesomeIcon icon={faUtensils } />&nbsp;\n                   商品加工済み\n                 </Button>\n            </>\n\n            }\n           </fieldset>\n          </div>\n           : \n          ''\n        }\n      </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect((state)=>state)(Show))\n","import React, { useState } from 'react';\nimport { Row, Col, Form, Button } from 'react-bootstrap';\nimport '../App.css';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\n\nconst  Reservation = (props)=>{\n \n\n  /******************************ログイン/未ログイン切り替え********************************************************** */\n  const loginUserCheck = ()=>{\n    if(props.userData.length===0){\n      props.history.push('/login');  \n    }\n  }\n useState(loginUserCheck());\n  return(\n   <>\n      <div className=\"text-center mt-5 mb-4\">\n        <h2 data-testid=\"userNewtitle\">明日の予約一覧表</h2>\n      </div> \n      <Row>\n        <Col md={{ span: 4, offset: 4 }} className=\"pt-3 pl-5 pr-5 pb-4 bg-light shadow\">\n      \n          \n        </Col>\n      </Row>\n   </>\n  )\n}\nexport default withRouter(connect(state=>state)(Reservation));","import React, { useState } from \"react\";\nimport { BrowserRouter, Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUtensils, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Index from './users/Index';\nimport Login from './Login';\nimport userNew from './users/New'\nimport Edit from './users/Edit'\nimport UserShow from './users/Show';\nimport EmpShow from './users/EmpShow';\nimport ItemIndex from './items/Index';\nimport ItemNew from './items/New';\nimport ItemEdit from './items/Edit';\nimport Process from './items/Process';\nimport OrderIndex from './orders/Index';\nimport OrderNew from './orders/New';\nimport OrderEdit from './orders/Edit';\nimport CustomorIndex from './customer/Index'\nimport CustomorShow from './customer/Show'\nimport Confirm from './customer/confirm';\nimport ShoppingIndex from './shopping/Index';\nimport ShoppingShow from './shopping/Show';\nimport Reservation from './shopping/Reservation';\nimport { connect } from \"react-redux\";\nimport { logoutAction, cartEmpty } from './store/Store';\nimport {  todayOrderExisting } from './shopping/settiing';\n\n\n function App(props){\n  const[state, setState] = useState({\n    editId: 0,\n    deleteId: 0,\n    itemEditId:0,\n    processId: 0,\n    OrderEditId: 0,\n    customerItem: null,\n    shoppingShow: null,\n    cartItem: null\n  })\n  const userlogout = ()=>{\n    let action = logoutAction();\n    props.dispatch(action);\n\n    let cartAction = cartEmpty();\n    props.dispatch(cartAction);\n    \n  }\n  const getEditId = (id)=>{\n\n    setState({\n      editId: id,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getItemEditId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: item,\n      processId: state.processId,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getProcessId = (item)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: item,\n      OrderEditId: state.OrderEdit,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  const getOrderEditId = (id)=>{\n\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: id,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*お客様買うボタンより*/\n  const customerItem = (item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*ストック数およびお買い物リストの更新*/\n  const changeItem =(item)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: item,\n      shoppingShow: state.shoppingShow,\n      cartItem: state.cartItem\n    })\n  }\n  /*個別の注文状況の表示用アイテム*/\n  const shoppingData = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: data,\n      cartItem: state.cartItem\n    })\n  }\n  /*買い物カゴ送信処理*/\n\n  const cartItem = (data)=>{\n    setState({\n      editId: state.editId,\n      deleteId: state.deleteId,\n      itemEditId: state.itemEditId,\n      processId: state.processId,\n      OrderEditId: state.OrderEditId,\n      customerItem: state.customerItem,\n      shoppingShow: state.shoppingShow,\n      cartItem: data\n    })\n  }\n  \n  return(\n    <BrowserRouter>\n    <div className='fixed-top'> \n    <nav className=\"navbar navbar-expand-lg navbar-light bg-dark fixed-top\">\n      <a className=\"navbar-brand text-white\" href=\"#\"><FontAwesomeIcon icon={faUtensils} />&nbsp;\n            加工依頼アプリ</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n        \n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          {props.userData.length >0?\n            props.userData[0].admin == true? \n             /*従業員サイド */\n            <>\n              <li class=\"nav-item pt-3 pb-3 active\">\n                <span className=\"font-weight-bold text-warning\"><FontAwesomeIcon icon={faUser} />{props.userData[0].name}さん</span>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/customor\" className=\"text-light p-3\">お買い物</Link>\n             </li>\n              <li className=\"nav-item pt-3 pb-3\">\n                <Link to=\"/\" className=\"text-light p-3\">お客様一覧</Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/items\" className=\"text-light p-3\">商品一覧</Link>\n              </li>\n              <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/orders\" className=\"text-light p-3\">店頭商品一覧</Link>\n             </li>\n             <li className=\"nav-item pt-3 pb-3\">\n               <Link to=\"/shoppings\" className=\"text-light p-3\">本日注文状況</Link>\n             </li>\n             { todayOrderExisting(JSON.parse(localStorage.getItem('shoppings'))).length >0? \n               <li className=\"nav-item pt-3 pb-3\">\n                 <Link to=\"/reservation\" className=\"text-light p-3\">明日の予約状況</Link>\n               </li> \n              : \n              ''\n              }\n          \n            </>\n            /*お客様サイド */\n              : \n              <>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/customor\" className=\"text-light p-3\">お買い物</Link>\n                </li>\n                <li className=\"nav-item pt-3 pb-3\">\n                  <Link to=\"/users/show\" className=\"text-light p-3\">お客様ページ</Link>\n                </li>\n              </>\n            : \n            <></>\n          }\n        </ul>\n\n        <ul className=\"navbar-nav\">\n        {props.userData.length >0? \n           <li className=\"nav-item pt-3 pb-3\">\n             <button \n              className=\"logout\"\n              onClick={userlogout}\n              data-testid=\"logintrue\"\n            >ログアウト</button>\n           </li>\n          : \n          <li className=\"nav-item pt-3 pb-3\"><Link to=\"/login\" className=\"text-light p-3\" data-testid=\"loginfalse\">ログイン</Link></li>\n          }\n        </ul>\n      </div>\n      \n    </nav>\n     \n      </div><br/><br/>\n      <Route exact path=\"/\" render={()=>\n        <Index \n          editIdget={(id)=>getEditId(id)} \n        />} /> \n      <Route path=\"/login\" render={()=><Login />} />\n      <Route path=\"/users/new\" component={userNew} />\n      <Route path=\"/users/edit\" render={ () => <Edit id={state.editId} />} />\n      <Route path=\"/users/show\" component={UserShow} />\n      <Route path=\"/users_empshow\"  render={()=><EmpShow\n        \n        />} />\n      <Route path=\"/items\"  render={()=><ItemIndex \n        itemEditIdget={(item)=>getItemEditId(item)} \n        processIdget={(item)=>getProcessId(item)}\n        />} />\n      <Route path=\"/items_new\" component={ItemNew} />\n      <Route path=\"/items_process\" render={ () => <Process item={state.processId} />}  />\n      <Route path=\"/items_edit\" render={ () => <ItemEdit item={state.itemEditId} />}  />\n      <Route path=\"/orders\" render={()=><OrderIndex orderEditIdget={(id)=>getOrderEditId(id)} />} />\n      <Route path=\"/orders_new\" component={OrderNew} />\n      <Route path=\"/orders_edit\" render={ () => <OrderEdit id={state.OrderEditId} />} />\n      <Route path=\"/customor\"  \n        render={()=>\n        <CustomorIndex \n          sendCustomerData={(item)=>customerItem(item)} \n          sendCartItemToConfirm={(item)=>cartItem(item)}\n          fixItemData={state.customerItem}\n        />} />\n      <Route path=\"/customor_show\" \n      render={()=>\n        <CustomorShow \n          itemData={state.customerItem}\n          changeItemData={(item)=>changeItem(item)}\n         \n      />} />\n     <Route path=\"/customer_confirm\"\n      render={()=>\n        <Confirm\n          orderData={state.cartItem}\n      />} />\n      \n     <Route path=\"/shoppings\" \n      render={()=>\n        <ShoppingIndex \n          sendShoppingData={(data)=>shoppingData(data)}\n        />} />\n     <Route path=\"/shoppings_show\" \n      render={()=>\n        <ShoppingShow \n          show={state.shoppingShow}\n        />} />\n       <Route path=\"/reservation\" \n        render={()=>\n          <Reservation\n            \n          />} />\n     \n    </BrowserRouter>\n  )\n}\nexport default connect((state)=>state)(App)\n\n\n\n/*\ncomponentDidMount() {\n    const fetchInit = {\n      method: \"GET\",\n      headers: { \"content-type\": \"application/json\" }\n    };\n\n    fetch(new URL(process.env.REACT_APP_SERVER_URL), fetchInit)\n      .then(response => response.json())\n      .then(response => this.setState(response));\n  }\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport datastore from './store/Store';\n\nReactDOM.render(\n  <Provider store={datastore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}